<commonviews:ToolPage
    x:Class="DevHome.Environments.Views.LandingPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commonviews="using:DevHome.Common.Views"
    xmlns:behaviors="using:DevHome.Common.Behaviors"
    xmlns:vm="using:DevHome.Environments.ViewModels"
    xmlns:customControls="using:DevHome.Environments.CustomControls"
    xmlns:commonCustomControls="using:DevHome.Common.Environments.CustomControls"
    xmlns:commonModels="using:DevHome.Common.Environments.Models"
    xmlns:selectors="using:DevHome.Environments.Selectors"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:winUIBehaviors="using:CommunityToolkit.WinUI.Behaviors"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:views="using:DevHome.Common.Views"
    behaviors:NavigationViewHeaderBehavior.HeaderMode="Never">

    <commonviews:ToolPage.Resources>
        <ResourceDictionary Source="ms-appx:///DevHome.Common/Environments/Templates/EnvironmentsTemplates.xaml" />
    </commonviews:ToolPage.Resources>

    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.LoadedCommand}" />
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Adding unshared resources/templates here-->
        <Grid.Resources>

            <converters:BoolToVisibilityConverter x:Key="NegatedBoolToVisibilityConverter" TrueValue="Collapsed" FalseValue="Visible" />

            <!-- Launch Button template -->
            <DataTemplate x:Key="LaunchButton" x:DataType="vm:ComputeSystemViewModel">
                <StackPanel
                    Visibility="{x:Bind ShouldShowLaunchOperation, Mode=OneWay}">
                    <!-- The split button with a menu flyout is only shown when there are other operations the extension supports other than launching -->
                    <SplitButton
                        Visibility="{x:Bind ShouldShowSplitButton, Mode=OneWay}"
                        VerticalAlignment="Top"
                        Command="{x:Bind LaunchActionCommand}"
                        x:Uid="LaunchButton"
                        Style="{StaticResource CardBodySplitButtonStyle}">
                        <SplitButton.Flyout>
                            <customControls:CardFlyout ItemsViewModels="{x:Bind LaunchOperations, Mode=OneWay}"/>
                        </SplitButton.Flyout>
                    </SplitButton>

                    <!-- A single button template is shown when the extension only supports launching from the launch button.-->
                    <Button
                        Visibility="{x:Bind ShouldShowSplitButton, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}"
                        VerticalAlignment="Top"
                        Command="{x:Bind LaunchActionCommand}"
                        x:Uid="LaunchButton"
                        Style="{StaticResource CardBodyLaunchButtonStyle}">
                    </Button>
                </StackPanel>
            </DataTemplate>

            <!-- Three Dot Button template -->
            <DataTemplate x:Key="ThreeDotsButton" x:DataType="vm:ComputeSystemViewModel">
                <Grid>
                    <Button
                        x:Uid="MoreOptionsButton"
                        Style="{StaticResource HorizontalThreeDotsStyle}">
                        <Button.Flyout>
                            <customControls:CardFlyout ItemsViewModels="{x:Bind DotOperations, Mode=OneWay}"/>
                        </Button.Flyout>
                    </Button>
                </Grid>
            </DataTemplate>

            <!-- Three Dot Button for create compute system operation template -->
            <DataTemplate x:Key="ThreeDotsButtonForCreation" x:DataType="vm:CreateComputeSystemOperationViewModel">
                <Grid>
                    <Button
                        Style="{StaticResource HorizontalThreeDotsStyle}"
                        x:Uid="MoreOptionsButton">
                        <Button.Flyout>
                            <customControls:CardFlyout ItemsViewModels="{x:Bind DotOperations, Mode=OneWay}" />
                        </Button.Flyout>
                    </Button>
                </Grid>
            </DataTemplate>

            <!-- Properties template for the compute system properties that appear within a horizontal card -->
            <DataTemplate x:Key="BottomRowProperties" x:DataType="commonModels:CardProperty">
                <Grid
                    HorizontalAlignment="Stretch"
                    Margin="0 2 5 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="6*" />
                    </Grid.ColumnDefinitions>
                    <Image
                        Grid.Column="0"
                        Margin="0 0 10 0"
                        Visibility="{x:Bind Icon, Mode=OneWay, Converter={StaticResource EmptyObjectToObjectConverter}}"
                        Source="{x:Bind Icon, Mode=OneWay}"
                        Width="{StaticResource ComputeSystemIcon12px}"
                        Height="{StaticResource ComputeSystemIcon12px}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        MaxWidth="50"/>
                    <TextBlock
                        Grid.Column="1"
                        Margin="0 0 5 0"
                        Visibility="{x:Bind Title, Mode=OneWay, Converter={StaticResource EmptyObjectToObjectConverter}}"
                        Text="{x:Bind Title, Mode=OneWay}"
                        TextTrimming="CharacterEllipsis"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsTextSelectionEnabled="True"
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"/>
                    <TextBlock
                        Grid.Column="2"
                        Visibility="{x:Bind Value, Mode=OneWay, Converter={StaticResource EmptyObjectToObjectConverter}}"
                        Text="{x:Bind Value, Mode=OneWay}"
                        TextTrimming="CharacterEllipsis"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsTextSelectionEnabled="True"
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"/>
                </Grid>
            </DataTemplate>

            <!-- Shimmer template from SetupFlow/SetupTargetView.xaml -->
            <DataTemplate x:Key="ComputeSystemLoadingTemplate">
                <ListView
                    SelectionMode="None"
                    ItemTemplate="{StaticResource HorizontalCardRootShimmerTemplate}"
                    ItemContainerStyle="{StaticResource HorizontalCardListViewItemContainerForManagementPageStyle}">
                    <x:String>Empty value for list since it doesn't need to use any bindings.</x:String>
                    <x:String>Empty value for list since it doesn't need to use any bindings.</x:String>
                </ListView>
            </DataTemplate>

            <DataTemplate x:Key="ComputeSystemTemplate" x:DataType="vm:ComputeSystemViewModel">
                <Grid Style="{StaticResource HorizontalCardRootForEnvironmentsPage}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!-- Card Header : Title, small icon, '...' button -->
                    <Grid Grid.Row="0">
                        <commonCustomControls:CardHeader
                            HeaderCaption="{x:Bind ProviderDisplayName, Mode=OneWay}"
                            HeaderIcon="{x:Bind HeaderImage, Mode=OneWay}"
                            ActionControlTemplate="{StaticResource ThreeDotsButton}"
                            OperationsVisibility="{x:Bind ShouldShowDotOperations, Mode=OneWay}"/>
                    </Grid>
                    <!-- Card Body : Name, thumbnail, 'Launch' button -->
                    <Grid Grid.Row="1">
                        <commonCustomControls:CardBody
                            ComputeSystemTitle="{x:Bind Name, Mode=OneWay}"
                            ComputeSystemAlternativeTitle="{x:Bind AlternativeName, Mode=OneWay}"
                            ComputeSystemImage="{x:Bind BodyImage, Mode=OneWay}"
                            CardState="{x:Bind State, Mode=OneWay}"
                            StateColor="{x:Bind StateColor, Mode=OneWay}"
                            ComputeSystemProperties="{x:Bind Properties, Mode=OneWay}"
                            ComputeSystemPropertyTemplate="{StaticResource BottomRowProperties}"
                            ActionControlTemplate="{StaticResource LaunchButton}"
                            ComputeSystemOperationStatus="{x:Bind UiMessageToDisplay, Mode=OneWay}"
                            ShouldShowInDefiniteProgress="{x:Bind IsOperationInProgress, Mode=OneWay}"/>
                    </Grid>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="CreateComputeSystemOperationTemplate" x:DataType="vm:CreateComputeSystemOperationViewModel">
                <Grid Style="{StaticResource HorizontalCardRootForEnvironmentsPage}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!-- Card Header : Title, small icon, '...' button -->
                    <Grid Grid.Row="0">
                        <commonCustomControls:CardHeader
                            HeaderCaption="{x:Bind ProviderDisplayName, Mode=OneWay}"
                            HeaderIcon="{x:Bind HeaderImage, Mode=OneWay}"
                            ActionControlTemplate="{StaticResource ThreeDotsButtonForCreation}" />
                    </Grid>
                    <Grid Grid.Row="1">
                        <commonCustomControls:CardBody
                            ComputeSystemTitle="{x:Bind EnvironmentName, Mode=OneWay}"
                            StateColor="{x:Bind StateColor, Mode=OneWay}"
                            ComputeSystemOperationStatus="{x:Bind UiMessageToDisplay, Mode=OneWay}"
                            ShouldShowInDefiniteProgress="{x:Bind IsOperationInProgress, Mode=OneWay}"/>
                    </Grid>
                </Grid>
            </DataTemplate>

            <selectors:CardItemTemplateSelector
                x:Key="CardItemTemplateSelector"
                ComputeSystemTemplate="{StaticResource ComputeSystemTemplate}"
                CreateComputeSystemOperationTemplate="{StaticResource CreateComputeSystemOperationTemplate}"/>

        </Grid.Resources>
        <!-- Templates end here -->

        <!-- Header -->
        <Grid Grid.Row="0" x:Name="TitleGrid"
              MaxWidth="{ThemeResource MaxPageContentWidth}" Margin="{ThemeResource HeaderMargin}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" x:Uid="EnvironmentsHeader" Style="{ThemeResource SubtitleTextBlockStyle}" HorizontalAlignment="Left" x:Name="EnvironmentsHeader"/>
            <views:AddCreateButton
                Grid.Column="3"
                Visibility="{x:Bind ViewModel.ShouldNavigateToExtensionsPage, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}"
                HorizontalAlignment="Right"
                x:Uid="CreateEnvironmentButton"
                Command="{x:Bind ViewModel.CallToActionInvokeButtonCommand}" />
            <Button
                Grid.Column="3"
                Visibility="{x:Bind ViewModel.ShouldNavigateToExtensionsPage, Mode=OneWay}"
                HorizontalAlignment="Right"
                x:Uid="GoToExtensionsLibrary"
                Command="{x:Bind ViewModel.CallToActionInvokeButtonCommand}" />
        </Grid>

        <!-- Filtering and sorting -->
        <Grid Grid.Row="1" MaxWidth="{ThemeResource MaxPageContentWidth}" Margin="{ThemeResource ContentPageMargin}" ColumnSpacing="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <!-- Search field -->
            <AutoSuggestBox
                Grid.Column="0"
                x:Uid="SearchTextBox"
                x:Name="SearchTextBox"
                Width="230"
                HorizontalAlignment="Left"
                VerticalAlignment="Center">
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="TextChanged">
                        <ic:InvokeCommandAction
                        Command="{x:Bind ViewModel.SearchHandlerCommand, Mode=OneWay}"
                        CommandParameter="{Binding Text, ElementName=SearchTextBox}"/>
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
            </AutoSuggestBox>
            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" Spacing="16">
                <!-- Provider field -->
                <TextBlock x:Uid="ProviderTextBlock" VerticalAlignment="Center" />
                <ComboBox x:Uid="ProviderSelectionComboBox"
                          x:Name="ProviderSelectionComboBox"
                          Margin="0 3 0 0"
                          MinWidth="150"
                          ItemsSource="{x:Bind ViewModel.Providers, Mode=OneWay}"
                          SelectedIndex="{x:Bind ViewModel.SelectedProviderIndex, Mode=TwoWay}">
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="SelectionChanged">
                            <ic:InvokeCommandAction
                                Command="{x:Bind ViewModel.ProviderHandlerCommand}"
                                CommandParameter="{Binding SelectedIndex, ElementName=ProviderSelectionComboBox, Mode=OneWay}" />
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ComboBox>
                <!-- Sort field -->
                <TextBlock x:Uid="SortByTextBlock" VerticalAlignment="Center" />
                <ComboBox x:Uid="SortSelectionComboBox"
                          x:Name="SortSelectionComboBox"
                          Margin="0 3 0 0"
                          MinWidth="165"
                          SelectedIndex="{x:Bind ViewModel.SelectedSortIndex, Mode=TwoWay}">
                    <ComboBoxItem x:Uid="SortByName"/>
                    <ComboBoxItem x:Uid="SortByNameDesc"/>
                    <ComboBoxItem x:Uid="SortByLastConnected"/>
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="SelectionChanged">
                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.SortHandlerCommand}"/>
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ComboBox>
                <!-- Sync button -->
                <Button
                    x:Uid="SyncEnvironmentsButton"
                    Command="{x:Bind ViewModel.SyncButtonCommand}"
                    Margin="0 3 0 0"
                    MinWidth="110">
                    <StackPanel Orientation="Horizontal" Spacing="8">
                        <FontIcon FontSize="16" FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE72C;"/>
                        <TextBlock x:Uid="SyncButtonTextBlock" />
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>

        <!-- Last synced text block-->
        <Grid Grid.Row="2" MaxWidth="{ThemeResource MaxPageContentWidth}" Margin="{ThemeResource ContentPageMargin}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                <TextBlock x:Uid="LastSyncTextBlock"
                           VerticalAlignment="Center"
                           Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                           Margin="0 12 3 12" />
                <TextBlock Text="{x:Bind ViewModel.LastSyncTime, Mode=OneWay}"
                           VerticalAlignment="Center"
                           Foreground="{ThemeResource TextFillColorSecondaryBrush}"/>
            </StackPanel>
        </Grid>

        <!-- Per VM/Compute System card -->
        <ScrollViewer Grid.Row="3" Style="{StaticResource EnvironmentScrollViewerStyle}"
            MaxWidth="{ThemeResource MaxPageContentWidth}" Margin="{ThemeResource ContentPageMargin}">
            <Grid>
                <StackPanel>
                    <ListView
                        MaxWidth="{ThemeResource MaxPageContentWidth}"
                        ItemsSource="{x:Bind ViewModel.ComputeSystemCardsView}" SelectionMode="None"
                        ItemTemplateSelector="{StaticResource CardItemTemplateSelector}"
                        ItemContainerStyle="{StaticResource HorizontalCardListViewItemContainerForManagementPageStyle}">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel></StackPanel>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>

                    <!-- Shimmer -->
                    <StackPanel
                        Visibility="{x:Bind ViewModel.ShowLoadingShimmer, Mode=OneWay}">
                        <ContentControl
                            HorizontalContentAlignment="Stretch"
                            ContentTemplate="{StaticResource ComputeSystemLoadingTemplate}"/>
                    </StackPanel>
                </StackPanel>

                <!-- No extension found, show link to extensions page-->
                <StackPanel
                    Visibility="{x:Bind ViewModel.CallToActionText, Mode=OneWay, Converter={StaticResource EmptyObjectToObjectConverter}}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Margin="0,0,0,250">
                    <TextBlock
                        Text="{x:Bind ViewModel.CallToActionText, Mode=OneWay}"
                        HorizontalAlignment="Center"
                        TextWrapping="WrapWholeWords"
                        HorizontalTextAlignment="Center" />
                    <views:AddCreateHyperlinkButton
                        Grid.Column="3"
                        HorizontalAlignment="Center"
                        Visibility="{x:Bind ViewModel.ShouldNavigateToExtensionsPage, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}"
                        Content="{x:Bind ViewModel.CallToActionHyperLinkButtonText, Mode=OneWay}"
                        Command="{x:Bind ViewModel.CallToActionInvokeButtonCommand}" />
                    <HyperlinkButton
                        Grid.Column="3"
                        HorizontalAlignment="Center"
                        Visibility="{x:Bind ViewModel.ShouldNavigateToExtensionsPage, Mode=OneWay}"
                        Content="{x:Bind ViewModel.CallToActionHyperLinkButtonText, Mode=OneWay}"
                        Command="{x:Bind ViewModel.CallToActionInvokeButtonCommand}" />
                </StackPanel>
            </Grid>
        </ScrollViewer>

        <!-- Notification panel -->
        <Grid Grid.Row="3" MaxWidth="{ThemeResource MaxPageContentWidth}" Margin="{ThemeResource ContentPageMargin}">
            <InfoBar MaxWidth="600"
                Margin="24"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom">
                <i:Interaction.Behaviors>
                    <winUIBehaviors:StackedNotificationsBehavior x:Name="NotificationQueue" />
                </i:Interaction.Behaviors>
            </InfoBar>
        </Grid>
    </Grid>
</commonviews:ToolPage>
