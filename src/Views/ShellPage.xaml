<Page
    x:Class="DevHome.Views.ShellPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:helpers="using:DevHome.Helpers"
    xmlns:behaviors="using:DevHome.Common.Behaviors"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:windows="using:DevHome.Common.Windows"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    Loaded="OnLoaded">
    <Page.Resources>
        <converters:BoolToVisibilityConverter x:Key="NegatedBoolToVisibilityConverter" TrueValue="Collapsed" FalseValue="Visible" />
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <windows:WindowTitleBar
            Grid.Row="0"
            x:Name="AppTitleBar"
            Title="{x:Bind ViewModel.Title}"
            Height="{x:Bind NavigationViewControl.CompactPaneLength}" />

        <NavigationView
            Grid.Row="1"
            x:Name="NavigationViewControl"
            Canvas.ZIndex="0"
            IsBackButtonVisible="Collapsed"
            IsTitleBarAutoPaddingEnabled="True"
            SelectedItem="{x:Bind ViewModel.Selected, Mode=OneWay}"
            IsSettingsVisible="True"
            OpenPaneLength="350"
            ExpandedModeThresholdWidth="1280"
            DisplayModeChanged="NavigationViewControl_DisplayModeChanged"
            Header="{x:Bind ((ContentControl)ViewModel.Selected).Content, Mode=OneWay}"
            Visibility="{x:Bind ViewModel.IsDevHomeGPOEnabled, Mode=OneWay}">
            <NavigationView.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.ThemeDictionaries>
                        <ResourceDictionary x:Key="Dark">
                            <SolidColorBrush x:Key="NavigationViewContentGridBorderBrush" Color="{StaticResource NavigationViewExpandedPaneBackground}" />
                            <SolidColorBrush x:Key="NavigationViewContentBackground" Color="{StaticResource NavigationViewExpandedPaneBackground}" />
                        </ResourceDictionary>
                        <ResourceDictionary x:Key="Light">
                            <SolidColorBrush x:Key="NavigationViewContentGridBorderBrush" Color="{StaticResource NavigationViewExpandedPaneBackground}" />
                            <SolidColorBrush x:Key="NavigationViewContentBackground" Color="{StaticResource NavigationViewExpandedPaneBackground}" />
                        </ResourceDictionary>
                        <ResourceDictionary x:Key="HighContrast">
                            <SolidColorBrush x:Key="NavigationViewContentGridBorderBrush" Color="{ThemeResource SystemColorWindowColor}" />
                            <SolidColorBrush x:Key="NavigationViewContentBackground" Color="{ThemeResource SystemColorWindowColor}" />
                        </ResourceDictionary>
                    </ResourceDictionary.ThemeDictionaries>
                </ResourceDictionary>
            </NavigationView.Resources>
            <NavigationView.MenuItems>
                <!--
                TODO: Update item titles by updating <x:Uid>.Content entries in Strings/en-us/Resources.resw.
                https://docs.microsoft.com/windows/uwp/app-resources/localize-strings-ui-manifest#refer-to-a-string-resource-identifier-from-xaml
            
                TODO: Update item icons by updating FontIcon.Glyph properties.
                https://docs.microsoft.com/windows/apps/design/style/segoe-fluent-icons-font#icon-list
                https://github.com/microsoft/devhome/issues/615
                -->
                <!-- The navigation menu is populated dynamically, but must have one static entry.  This NavigationViewItem is invisible and ignored -->
                <NavigationViewItem x:Uid="Shell_IGNORE" helpers:NavigationHelper.NavigateTo="DevHome.Settings.ViewModels.SettingsViewModel" Visibility="Collapsed"/>
            </NavigationView.MenuItems>
            <NavigationView.FooterMenuItems>
                <NavigationViewItem x:Uid="ms-resource:///DevHome.ExtensionLibrary/Resources/NavigationPane" AutomationProperties.AutomationId="Extensions"
                                    helpers:NavigationHelper.NavigateTo="DevHome.ExtensionLibrary.ViewModels.ExtensionLibraryViewModel">
                    <NavigationViewItem.Icon>
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xEA86;"/>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
            </NavigationView.FooterMenuItems>
            <NavigationView.HeaderTemplate>
                <DataTemplate>
                    <Grid MaxWidth="{ThemeResource MaxPageContentWidth}" Margin="{ThemeResource ContentPageMargin}">
                        <TextBlock
                            Text="{Binding}"
                            Style="{ThemeResource SubtitleTextBlockStyle}" />
                    </Grid>
                </DataTemplate>
            </NavigationView.HeaderTemplate>
            <i:Interaction.Behaviors>
                <behaviors:NavigationViewHeaderBehavior
                    DefaultHeader="{x:Bind ((ContentControl)ViewModel.Selected).Content, Mode=OneWay}">
                    <behaviors:NavigationViewHeaderBehavior.DefaultHeaderTemplate>
                        <DataTemplate>
                            <Grid MaxWidth="{ThemeResource MaxPageContentWidth}" Margin="{ThemeResource ContentPageMargin}">
                                <TextBlock
                                    Text="{Binding}"
                                    Style="{ThemeResource SubtitleTextBlockStyle}" />
                            </Grid>
                        </DataTemplate>
                    </behaviors:NavigationViewHeaderBehavior.DefaultHeaderTemplate>
                </behaviors:NavigationViewHeaderBehavior>
            </i:Interaction.Behaviors>
            <Grid DataContext="{Binding ViewModel.InfoBarModel}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!-- InfoBar's Top margin is set conditionally in ShellPage.xaml.cs file on NavigationViewControl_DisplayModeChanged-->
                <InfoBar 
                    Grid.Row="0" 
                    x:Name="ShellInfoBar" 
                    Margin="50 0 50 0" 
                    Severity="{x:Bind ViewModel.ShellInfoBarModel.Severity, Mode=TwoWay}" 
                    Title="{x:Bind ViewModel.ShellInfoBarModel.Title, Mode=TwoWay}" 
                    Visibility="Visible" 
                    Message="{x:Bind ViewModel.ShellInfoBarModel.Description, Mode=TwoWay}" 
                    IsOpen="{x:Bind ViewModel.ShellInfoBarModel.IsOpen, Mode=TwoWay}" 
                    MaxWidth="{ThemeResource MaxPageContentWidth}" />
                <Frame
                    Grid.Row="1"
                    x:Name="NavigationFrame"
                    CornerRadius="{ThemeResource OverlayCornerRadius}" />
            </Grid>
        </NavigationView>

        <InfoBar x:Uid="ShellInfoBar" IsOpen="True" Severity="Error" Margin="20,40,20,10"></InfoBar>

        <StackPanel
            Grid.Row="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="{x:Bind ViewModel.IsDevHomeGPOEnabled, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}">
            <TextBlock
                x:Uid="GPODisabledDevHomeHeader"
                Style="{StaticResource HeaderTextBlockStyle}"
                HorizontalTextAlignment="Center"/>
            <TextBlock
                x:Uid="GPODisabledDevHomeDescription"
                Style="{StaticResource SubheaderTextBlockStyle}"
                HorizontalTextAlignment="Center"/>
        </StackPanel>

        <!-- A "hidden" TextBlock read by the narrator on value change.
             Setting the visibility to Collapsed prevents the screen reader
             from reading the control value. -->
        <TextBlock Width="0" Height="0" IsTabStop="False" Text="{x:Bind ViewModel.AnnouncementText, Mode=OneWay}">
            <i:Interaction.Behaviors>
                <behaviors:TextBlockAutomationBehavior RaiseLiveRegionChangedEvent="True" LiveSetting="Assertive" />
            </i:Interaction.Behaviors>
        </TextBlock>
    </Grid>
</Page>
